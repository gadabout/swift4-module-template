language: objective-c
osx_image: xcode10.1
cache:
  directories:
  - Carthage
env:
  global:
  - WORKSPACE='__PROJECT_NAME__.xcworkspace'
  - IOS_FRAMEWORK_SCHEME='__PROJECT_NAME__'
  - IOS_SDK=iphonesimulator12.1
  - EXAMPLE_SCHEME='iOS-Example'
  matrix:
   - DESTINATION='platform=iOS Simulator,name=iPhone X,OS=12.1' SCHEME=$IOS_FRAMEWORK_SCHEME SDK=$IOS_SDK POD_LINT='NO'
before_install:
  - brew update
  - brew outdated carthage || brew upgrade carthage
  - carthage bootstrap --verbose --no-use-binaries --platform iOS --cache-builds
  - gem install xcpretty-travis-formatter --no-rdoc --no-ri --no-document --quiet
install:
  - ./install_swiftlint.sh
script:
- swiftlint
- set -o pipefail
- xcodebuild -version
- xcodebuild -showsdks
- xcodebuild -list
- xcodebuild -workspace $WORKSPACE -list

- xcodebuild -scheme $SCHEME -workspace $WORKSPACE -sdk $SDK -destination 'platform=iOS Simulator,name=iPhone X,OS=12.1' build test

# Build and test Framework in Debug
#- xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO test | xcpretty -c

# Build Framework in ReleaseTest
#- xcodebuild -workspace "$WORKSPACE" -scheme "$SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty -c

# Build Example in Debug if specified
#- xcodebuild -workspace "$WORKSPACE" -scheme "$EXAMPLE_SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO build | xcpretty -c

# Run `pod lib lint` if specified
- if [ $POD_LINT == 'YES' ]; then
    pod lib lint --allow-warnings;
  fi

after_success:
- bash <(curl -s https://codecov.io/bash) -cF ios
